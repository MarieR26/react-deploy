{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setTitle","enteredAmount","setAmount","enteredDate","setDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f0d58d9f.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onChangeFilter={filterChangeHandler}\n          selected={filteredYear}\n        />\n\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n\n        {/* {filteredExpenses.length === 0 && <p>No Expenses found</p>}\n\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))} */}\n\n        {/* <ExpenseItem\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        />\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        />\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        />\n        <ExpenseItem\n          title={props.items[3].title}\n          amount={props.items[3].amount}\n          date={props.items[3].date}\n        /> */}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setTitle] = useState(\"\");\n  const [enteredAmount, setAmount] = useState(\"\");\n  const [enteredDate, setDate] = useState(\"\");\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = (e) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: e.target.value,\n    // });\n    setTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    // setUserInput({ ...userInput, enteredAmount: e.target.value });\n    setAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    // setUserInput({ ...userInput, enteredDate: e.target.value });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: e.target.value };\n    // });\n\n    setDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setTitle(\"\");\n    setDate(\"\");\n    setAmount(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport React, { useState } from \"react\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nimport React, { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 10.5,\n    date: new Date(2021, 9, 26),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 1250,\n    date: new Date(2020, 9, 20),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.56,\n    date: new Date(2020, 8, 10),\n  },\n  {\n    id: \"e4\",\n    title: \"Yoga\",\n    amount: 100,\n    date: new Date(2022, 8, 9),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}